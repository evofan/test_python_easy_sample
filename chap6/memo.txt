さまざまな機能を取り込もう
外部ライブラリの使用

■6-1 外部ライブラリとは
標準ライブラリ＝importで使う
外部ライブラリ＝別途インストールが必要、標準より高度で複雑な処理を行うものが多い
「Python 画像処理」等で見つかる

PyPI The Python Package Index
https://pypi.org/
Pythonの外部ライブラリが多く登録されている

・外部ライブラリの使い方
①外部ライブラリのインストール
②Pythonから呼び出せるようにする

Python2.7.9、Pythpm3.4以降ではpipコマンドでnpmのようにインストール出来る
（MacのPython3ではpip3コマンド）

・pipコマンドの使い方

インストール
pip install モジュール名
C:\Users\USER>pip install Pillow
Collecting Pillow
  Downloading https://files.pythonhosted.org/packages/0b/ac/d01c8d2ce0f2680d066ef4b0f393b3149aab8451792afc02fe4990987f4b/Pillow-8.2.0-cp38-cp38-win_amd64.whl (2.2MB)
     |████████████████████████████████| 2.2MB 3.3MB/s
Installing collected packages: Pillow
Successfully installed Pillow-8.2.0
WARNING: You are using pip version 19.2.3, however version 21.0.1 is available.
You should consider upgrading via the 'python -m pip install --upgrade pip' command.

アンインストール
pip uninstall モジュール名

詳細を調べる
pip show モジュール名
C:\Users\USER>pip show Pillow
Name: Pillow
Version: 8.2.0
Summary: Python Imaging Library (Fork)
Home-page: https://python-pillow.org
Author: Alex Clark (PIL Fork Author)
Author-email: aclark@python-pillow.org
License: HPND
Location: c:\users\user\appdata\local\programs\python\python38\lib\site-packages
Requires:
Required-by:

今までにインストールしたモジュール一覧
C:\Users\USER>pip list
Package           Version
----------------- -------
astroid           2.4.2
colorama          0.4.4
isort             5.6.4
lazy-object-proxy 1.4.3
mccabe            0.6.1
Pillow            8.2.0
pip               19.2.3
pylint            2.6.0
setuptools        41.2.0
six               1.15.0
toml              0.10.2
wrapt             1.12.1
WARNING: You are using pip version 19.2.3, however version 21.0.1 is available.
You should consider upgrading via the 'python -m pip install --upgrade pip' command.

■6-2 外部ライブラリを使ったプログラミング、Pythonで画像処理
Pillowというライブラリを使って画像処理を行う
pip install Pillow
>>> from PIL import Image
>>> image = Image.open('C:\\Users\\USER\\Documents\\test_python_easy_sample\\chap6\\temp\\4283623_s.jpg')
>>> image.show()
→指定の画像が立ち上がった

赤色と青色の入れ違った画像を表示する
>>> from PIL import Image
>>> image = Image.open('C:\\Users\\USER\\Documents\\test_python_easy_sample\\chap6\\temp\\4283623_s.jpg')
>>> r, g, b = image.split()
>>> convert_image = Image.merge("RGB", (b,g,r))
>>> convert_image.save('C:\\Users\\USER\\Documents\\test_python_easy_sample\\chap6\\temp\\rgb_to_bgr.jpg');
>>> convert_image.show()
→色の入れ替わった画像が立ち上がって表示された

白黒に変換
>>> from PIL import Image
>>> image = Image.open('C:\\Users\\USER\\Documents\\test_python_easy_sample\\chap6\\temp\\4283623_s.jpg')
>>> black_and_white = image.convert('1')
>>> convert_image.show()
>>> black_and_white.save('C:\\Users\\USER\\Documents\\test_python_easy_sample\\chap6\\temp\\b_and_w.jpg')

グレースケールに変換
>>> from PIL import Image
>>> image = Image.open('C:\\Users\\USER\\Documents\\test_python_easy_sample\\chap6\\temp\\4283623_s.jpg')
>>> gray_image = image.convert('L')
>>> gray_image.show()
>>> gray_image.save('C:\\Users\\USER\\Documents\\test_python_easy_sample\\chap6\\temp\\gray.jpg')

画像を回転させる
>>> from PIL import Image
>>> image = Image.open('C:\\Users\\USER\\Documents\\test_python_easy_sample\\chap6\\temp\\4283623_s.jpg')
>>> image.transpose(Image.ROTATE_90).show()
>>> image.transpose(Image.ROTATE_90).save('C:\\Users\\USER\\Documents\\test_python_easy_sample\\chap6\\temp\\rotate90.jpg')


■6-3 外部ライブラリを使ったプログラミング、Pythonでインタビューネットにアクセス
webブラウザを介せずにアクセスする
requestsという外部ライブラリを使用する

Requests: 人間のためのHTTP
https://requests-docs-ja.readthedocs.io/en/latest/
C:\Users\USER>pip install requests
Collecting requests
  Downloading https://files.pythonhosted.org/packages/29/c1/24814557f1d22c56d50280771a17307e6bf87b70727d975fd6b2ce6b014a/requests-2.25.1-py2.py3-none-any.whl (61kB)
     |████████████████████████████████| 61kB 4.1MB/s
Collecting certifi>=2017.4.17 (from requests)
  Downloading https://files.pythonhosted.org/packages/5e/a0/5f06e1e1d463903cf0c0eebeb751791119ed7a4b3737fdc9a77f1cdfb51f/certifi-2020.12.5-py2.py3-none-any.whl (147kB)
     |████████████████████████████████| 153kB 6.4MB/s
Collecting idna<3,>=2.5 (from requests)
  Downloading https://files.pythonhosted.org/packages/a2/38/928ddce2273eaa564f6f50de919327bf3a00f091b5baba8dfa9460f3a8a8/idna-2.10-py2.py3-none-any.whl (58kB)
     |████████████████████████████████| 61kB 3.8MB/s
Collecting urllib3<1.27,>=1.21.1 (from requests)
  Downloading https://files.pythonhosted.org/packages/09/c6/d3e3abe5b4f4f16cf0dfc9240ab7ce10c2baa0e268989a4e3ec19e90c84e/urllib3-1.26.4-py2.py3-none-any.whl (153kB)
     |████████████████████████████████| 153kB 6.4MB/s
Collecting chardet<5,>=3.0.2 (from requests)
  Downloading https://files.pythonhosted.org/packages/19/c7/fa589626997dd07bd87d9269342ccb74b1720384a4d739a1872bd84fbe68/chardet-4.0.0-py2.py3-none-any.whl (178kB)
     |████████████████████████████████| 184kB 6.4MB/s
Installing collected packages: certifi, idna, urllib3, chardet, requests
Successfully installed certifi-2020.12.5 chardet-4.0.0 idna-2.10 requests-2.25.1 urllib3-1.26.4
WARNING: You are using pip version 19.2.3, however version 21.0.1 is available.
You should consider upgrading via the 'python -m pip install --upgrade pip' command.

>>> import requests
>>> r = requests.get('http://www.yahoo.co.jp')
>>> print(r.text)
<!DOCTYPE html><html lang="ja"><head><meta charSet="utf-8"/><meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"/><title>Yahoo! JAPAN</title><meta name="description" content="あなたの毎日をアップデートする情報ポータル。検索、ニュース、天気、スポーツ、メール、ショッピング、オークションなど便利なサービスを展開しています。"/><meta name="robots" content="noodp"/><meta name="viewport" content="width=1010"/><link rel="dns-prefetch" href="//s.yimg.jp"/><link rel="dns-prefetch" href="//yads.c.yimg.jp"/><meta name="google-site-verification" content="fsLMOiigp5fIpCDMEVodQnQC7jIY1K3UXW5QkQcBmVs"/><link rel="alternate" href="android-app://jp.co.yahoo.android.yjtop/yahoojapan/home/top"/><link rel="alternate" media="only screen and (max-width: 640px)" href="https://m.yahoo.co.jp/"/><link rel="canonical" href="https://www.yahoo.co.jp/"/><link rel="shortcut icon" href="https://s.yimg.jp/c/icon/s/bsc/2.0/favicon.ico" type="image/vnd.microsoft.icon"/><link rel="icon" href="https://s.yimg.jp/c/icon/s/bsc/2.0/favicon.ico" type="image/vnd.microsoft.icon"/><meta property="og:title" content="Yahoo! JAPAN"/><meta property="og:type" content="website"/><meta property="og:url" content="https://www.yahoo.co.jp/"/><meta property="og:image" content="https://s.yimg.jp/images/top/ogp/fb_y_1500px.png"/><meta property="og:description" content="あなたの毎日をアップデートする情報ポータル。検索、ニュース、天気、スポーツ、メール、ショッピング、 オークションなど便利なサービスを展開しています。"/><meta property="og:site_name" content="Yahoo! JAPAN"/><meta property="twitter:card" content="summary_large_image"/><meta property="twitter:site" content="@Yahoo_JAPAN_PR"/><meta property="twitter:image" content="https://s.yimg.jp/images/top/ogp/tw_y_1400px.png"/><meta property="fb:app_id" content="472870002762883"/><link rel="stylesheet" href="//s.yimg.jp/images/top/orion/20210316/bundle_20210316.css"/><script>window.onbeforeunload = function() {}</script><script>
            var TLDataContext = {
              ual : {
※以下省略

整形したテキストを表示
>>> import requests
>>> import pprint
>>> r = requests.get('http://www.yahoo.co.jp')
>>> pprint.pprint(r.text)
('<!DOCTYPE html><html lang="ja"><head><meta charSet="utf-8"/><meta '
 'http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"/><title>Yahoo! '
 'JAPAN</title><meta name="description" '
 'content="あなたの毎日をアップデートする情報ポータル。検索、ニュース、天気、スポーツ、メール、ショッピング、オークショ ンなど便利なサービスを展開しています。"/><meta '
 'name="robots" content="noodp"/><meta name="viewport" '
 'content="width=1010"/><link rel="dns-prefetch" href="//s.yimg.jp"/><link '
 'rel="dns-prefetch" href="//yads.c.yimg.jp"/><meta '
 'name="google-site-verification" '
※以下省略


requestsを使ってWEB APIにアクセス
API=Apprication Proggraming Interface、様々な機能の入口
例えばTwitter APIを使えばブラウザを介せずに投稿したり閲覧したりすることが出来る

他にはNTTドコモのAPIでは、画像認識、音声認識、言語解析、雑談対話等が出来る


requestsを使ったAPIへのアクセス方法（天気予報編）
※サンプルのLivedoor Weather Hacksが2020年7月で終了したため、使用不可

気象庁で提供しているRSS
https://www.jma.go.jp/jma/menu/rss_info.html
これを使う？

Yahoo!天気・災害で
https://weather.yahoo.co.jp/weather/rss/
↑のがいいかも

'https://rss-weather.yahoo.co.jp/rss/days/4410.xml'

>>> import requests
>>> import pprint
>>> api_url = 'https://rss-weather.yahoo.co.jp/rss/days/4410.xml'
>>> weather_data = requests.get(api_url)
>>> pprint.pprint(weather_data)
<Response [200]>
※元のサンプルはJSONデータの処理なのでうまくいかない
※ので省略


requestsを使ったAPIへのアクセス方法（wikipedia編）
>>> import requests
>>> import pprint
>>> api_url = 'https://ja.wikipedia.org/w/api.php'
>>> api_params = {'format':'json', 'action':'query', 'titles':'椎名林檎', 'prop':'revisions', 'rvprop':'content' }
>>> wiki_data = requests.get(api_url, params=api_params).json()
>>> pprint.pprint(wiki_data)
{'batchcomplete': '',
 'warnings': {'main': {'*': 'Unrecognized parameter: titiles.'}}}
>>>
>>> pprint.pprint(wiki_data)
{'batchcomplete': '',
 'query': {'pages': {'2771081': {'ns': 0,
                                 'pageid': 2771081,
                                 'revisions': [{'*': '{{半保護}}\n'
                                                     '{{Infobox Musician\n'
                                                     '|名前=椎名 林檎\n'
                                                     '|画像= '
                                                     'Shiina_Ringo_2016.jpg\n'
                                                     '|画像説明=[[SPACE SHOWER '
                                                     'MUSIC AWARDS]]にて（BEST '
                                                     'FEMALE ARTISTを受賞）\n'
                                                     '|画像サイズ=\n'
                                                     '|画像補正=\n'
                                                     '|背景色=singer\n'
                                                     '|出生名={{要出典範囲|椎名 裕美子（しいな '
                                                     'ゆみこ）|date=2020-08}}\n'
                                                     '|別名=Deyonná<ref '
                                                     'group="注">[[レキシ]]の楽曲「きらきら武士」に参加した際の変名。</ref>\n'
                                                     '|出生={{生年月日と年齢|1978|11|25}}\n'
                                                     '|出身地={{JPN1947}}、[[埼玉県]][[浦和市]]（現[[さいたま市]][[浦和 区]]）\n'
                                                     '|死没=\n'
                                                     '|血液型=\n'
                                                     '|学歴=\n'
                                                     '|担当楽器={{plainlist|\n'
                                                     '*[[ボーカル]]\n'
                                                     '*[[ギター]]<ref '
                                                     'group="注">それ以外にも、ライブやレコーディングでは[[ピアノ]]・[[ キーボード '
                                                     '(楽器)|キーボード]]・[[鍵盤ハーモニカ]]・[[ベース]]・[[ドラムセッ ト|ドラム]]・[[パーカッション]]・[[タンブリン|タンバリン]]などを演奏することもあり、またライブでは曲によって[[マイクロフォン|マイク]]の代わりに[[メガホン|拡声器]]を使って歌唱する。</ref>\n'
                                                     '}}\n'
                                                     '|ジャンル={{plainlist|\n'
                                                     '*[[ロック (音楽)|ロック]]\n'
                                                     '*[[J-POP]]\n'
                                                     '*[[ジャズ]]\n'
                                                     '*[[アシッドジャズ]]\n'
                                                     '*[[オルタナティヴ・ロック]]\n'
                                                     '*[[エレクトロニカ]]\n'
                                                     '*[[インダストリアル]]\n'
                                                     '*[[プログレッシブ・ロック]]\n'
                                                     '*[[パンク・ロック]]\n'
                                                     '*[[エクスペリメンタル・ロック]]\n'
                                                     '*[[スウィング・ジャズ]]\n'
                                                     '}}\n'
                                                     '\n'
                                                     '|職業={{plainlist|\n'
                                                     '*[[シンガーソングライター]]\n'
                                                     '*[[作詞家]]\n'
                                                     '*[[作曲家]]\n'
                                                     '*[[編曲家]]\n'
                                                     '*[[音楽プロデューサー|プロデューサー]]\n'
                                                     '}}\n'
                                                     '|活動期間=[[1998年]] - 現在<ref '
                                                     'group="注">2001年から2002年にかけては出産のため、2004年から2005年 にかけてはバンド・東京事変のボーカルに専念するためにソロ歌手としての活動を休止。</ref>\n'
                                                     '|レーベル={{plainlist|\n'
                                                     '*[[EMIミュージック・ジャパン|東芝EMI]]/EASTWORLD（1998年 '
                                                     '- 1999年）\n'
※途中省略
                                                'contentformat': 'text/x-wiki',
                                                'contentmodel': 'wikitext'}],
                                 'title': '椎名林檎'}}},
 'warnings': {'main': {'*': 'Subscribe to the mediawiki-api-announce mailing '
                            'list at '
                            '<https://lists.wikimedia.org/mailman/listinfo/mediawiki-api-announce> '
                            'for notice of API deprecations and breaking '
                            'changes. Use [[Special:ApiFeatureUsage]] to see '
                            'usage of deprecated features by your '
                            'application.'},
              'revisions': {'*': 'Because "rvslots" was not specified, a '
                                 'legacy format has been used for the output. '
                                 'This format is deprecated, and in the future '
                                 'the new format will always be used.'}}}
>>>

wikipediaの情報を取得する（応用編）
※wikipedia1b.pyを参照

ファイルに引数を渡す方法
>>> import sys
>>> print(sys.argv)
['']

C:\Users\USER\Documents\test_python_easy_sample\chap6>python test_sys.py one two three four
['test_sys.py', 'one', 'two', 'three', 'four']
？
ファイルの中身でなく、ファイル名を渡している？

C:\Users\USER\Documents\test_python_easy_sample\chap6>python wikipedia2.py '東京事変'
※↑最後の引数の単語が無いとエラーになる
出力されたwiki2.htmlの内容も空？


■6-4 外部ライブラリを使ったプログラミング、Pythonで情報収集
□クローリングとスクレイピング
クローリング...webサイトからそのまま情報を収集してくる、crawl
スクレイピング...集めた情報から必要なものだけを抽出する、scrape

BeautifulSpu4...スクレイピングするモジュール
C:\Users\USER>pip install beautifulsoup4
Collecting beautifulsoup4
  Downloading https://files.pythonhosted.org/packages/d1/41/e6495bd7d3781cee623ce23ea6ac73282a373088fcd0ddc809a047b18eae/beautifulsoup4-4.9.3-py3-none-any.whl (115kB)
     |████████████████████████████████| 122kB 252kB/s
Collecting soupsieve>1.2; python_version >= "3.0" (from beautifulsoup4)
  Downloading https://files.pythonhosted.org/packages/36/69/d82d04022f02733bf9a72bc3b96332d360c0c5307096d76f6bb7489f7e57/soupsieve-2.2.1-py3-none-any.whl
Installing collected packages: soupsieve, beautifulsoup4
Successfully installed beautifulsoup4-4.9.3 soupsieve-2.2.1
WARNING: You are using pip version 19.2.3, however version 21.0.1 is available.
You should consider upgrading via the 'python -m pip install --upgrade pip' command.

>>> from bs4 import BeautifulSoup
>>> soup = BeautifulSoup("<html> Lollipop </html>","html.parser")

BeautifulSpu4の基本的な使い方
>>> import requests
>>> from bs4 import BeautifulSoup
>>> html_data = requests.get('http://www.yahoo.co.jp/')
>>> soup = BeautifulSoup(html_data.text,"html.parser")
>>> soup.title
<title>Yahoo! JAPAN</title>
>>>


>>> import requests
>>> from bs4 import BeautifulSoup
>>> a = requests.get('http://news.yahoo.co.jp/pickup/computer/rss.xml')
>>> soup = BeautifulSoup(a.text,"html.parser")
>>> type(soup)
<class 'bs4.BeautifulSoup'>
>>> soup.findAll('item')
[<item>
<title>本RSSのURLは変更になりました。新しいRSSのURLへ移行をお願いします。</title>
<link/>https://yahoo.jp/ibOrnq
</item>, <item>
<title>マネックス証券 システム不具合</title>
<link/>https://news.yahoo.co.jp/pickup/6390799
<pubdate>Fri, 16 Apr 2021 12:01:29 +0900</pubdate>
<guid ispermalink="false">yahoo/news/topics/6390799</guid>
</item>, <item>
<title>COCOA巡り厚労省「業者任せ」</title>
<link/>https://news.yahoo.co.jp/pickup/6390787
<pubdate>Fri, 16 Apr 2021 09:47:38 +0900</pubdate>
<enclosure length="133" type="image/gif" url="https://s.yimg.jp/images/icon/photo.gif">
</enclosure>
<guid ispermalink="false">yahoo/news/topics/6390787</guid>
</item>, <item>
<title>Amazonプライム 2億人を突破</title>
<link/>https://news.yahoo.co.jp/pickup/6390793
<pubdate>Fri, 16 Apr 2021 10:42:16 +0900</pubdate>
<enclosure length="133" type="image/gif" url="https://s.yimg.jp/images/icon/photo.gif">
</enclosure>
<guid ispermalink="false">yahoo/news/topics/6390793</guid>
</item>, <item>
<title>米コインベース ナスダック上場</title>
<link/>https://news.yahoo.co.jp/pickup/6390700
<pubdate>Thu, 15 Apr 2021 11:02:18 +0900</pubdate>
<enclosure length="133" type="image/gif" url="https://s.yimg.jp/images/icon/photo.gif">
</enclosure>
<guid ispermalink="false">yahoo/news/topics/6390700</guid>
</item>, <item>
<title>カプコン流出 大阪府警が捜査</title>
<link/>https://news.yahoo.co.jp/pickup/6390673
<pubdate>Wed, 14 Apr 2021 22:51:09 +0900</pubdate>
<enclosure length="133" type="image/gif" url="https://s.yimg.jp/images/icon/photo.gif">
</enclosure>
<guid ispermalink="false">yahoo/news/topics/6390673</guid>
</item>, <item>
<title>楽天に5G電波追加 東名阪以外で</title>
<link/>https://news.yahoo.co.jp/pickup/6390660
<pubdate>Wed, 14 Apr 2021 20:17:28 +0900</pubdate>
<enclosure length="133" type="image/gif" url="https://s.yimg.jp/images/icon/photo.gif">
</enclosure>
<guid ispermalink="false">yahoo/news/topics/6390660</guid>
</item>, <item>
<title>新Xperia 世界初のレンズ搭載</title>
<link/>https://news.yahoo.co.jp/pickup/6390659
<pubdate>Wed, 14 Apr 2021 19:40:03 +0900</pubdate>
<enclosure length="133" type="image/gif" url="https://s.yimg.jp/images/icon/photo.gif">
</enclosure>
<guid ispermalink="false">yahoo/news/topics/6390659</guid>
</item>, <item>
<title>不適切動画巡り焼き肉店側謝罪</title>
<link/>https://news.yahoo.co.jp/pickup/6390736
<pubdate>Thu, 15 Apr 2021 17:06:50 +0900</pubdate>
<enclosure length="133" type="image/gif" url="https://s.yimg.jp/images/icon/photo.gif">
</enclosure>
<guid ispermalink="false">yahoo/news/topics/6390736</guid>
</item>]
>>>

>>> for news in soup.findAll('item'):
...     print(news.title)
...
<title>本RSSのURLは変更になりました。新しいRSSのURLへ移行をお願いします。</title>
<title>マネックス証券 システム不具合</title>
<title>COCOA巡り厚労省「業者任せ」</title>
<title>Amazonプライム 2億人を突破</title>
<title>米コインベース ナスダック上場</title>
<title>カプコン流出 大阪府警が捜査</title>
<title>楽天に5G電波追加 東名阪以外で</title>
<title>新Xperia 世界初のレンズ搭載</title>
<title>不適切動画巡り焼き肉店側謝罪</title>
>>>

>>> for news in soup.findAll('item'):
...     print(news.title.string)
...
本RSSのURLは変更になりました。新しいRSSのURLへ移行をお願いします。
マネックス証券 システム不具合
COCOA巡り厚労省「業者任せ」
Amazonプライム 2億人を突破
米コインベース ナスダック上場
カプコン流出 大阪府警が捜査
楽天に5G電波追加 東名阪以外で
新Xperia 世界初のレンズ搭載
不適切動画巡り焼き肉店側謝罪
>>>

amazonをスクレイピングする

TVゲームストア の 新着ランキング
https://www.amazon.co.jp/gp/new-releases/videogames/637394/

>>> import requests
>>> from bs4 import BeautifulSoup
>>> b = requests.get('https://www.amazon.co.jp/gp/new-releases/videogames/637394/')
>>> soup = BeautifulSoup(b.text,"html.parser")
>>> soup.find(class_='zg_itemRow').find(class_='zg_title').find('a').string
>>> soup.title
<title>
²Àfð¨©¯µÄ¢Ü·I
</title>
>>> type(soup)
<class 'bs4.BeautifulSoup'>
>>> soup.find(class_='zg_itemRow').find(class_='zg_title').find('a').string
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'NoneType' object has no attribute 'find'
>>>

>>> for game in soup.findAll(class_='zg_itemRow'):
...     print(game.find(class_='zg_rankNumber').string+game.find(class_='zg_title').find('a').string)
...
>>>

※クラス名が変わってる？ソース見ても該当箇所判らず

■6-5 外部ライブラリモジュールを自分で作ってみる
□モジュールの作り方

実際に自分でライブラリを作り、importして使ってみる

print('Happy new year!')
C:\Users\USER\Documents\test_python_easy_sample\chap6>python happynewyear1.py
Happy new year!

>>> import happynewyear1
Happy new year!
>>>

>>> dir()
['__annotations__', '__builtins__', '__doc__', '__loader__', '__name__', '__package__', '__spec__', 'happynewyear1']
>>>

>>> import happynewyear2
happynewyear2
>>>

>>> import happynewyear3
>>>


少し実用的なモジュールを作ってみる

>>> import monthname
>>> monthname.japanese(8)
'葉月'
>>>

>>> monthname.japanese(15)
'月の数字を入力して下さい'
>>>

C:\Users\USER\Documents\test_python_easy_sample\chap6>python monthname.py
これはモジュール用のファイルです。importして使って下さい


ライブラリの場所
>>> import calendar
>>> print(calendar.__file__)
C:\Users\USER\AppData\Local\Programs\Python\Python38\lib\calendar.py
>>>
